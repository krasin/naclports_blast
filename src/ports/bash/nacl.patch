diff --git a/Makefile.in b/Makefile.in
index 9f9276d..278ad65 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -414,7 +414,8 @@ LIBRARY_LDFLAGS = $(READLINE_LDFLAGS) $(HISTORY_LDFLAGS) $(GLOB_LDFLAGS) \
 #
 
 # The main source code for the Bourne Again SHell.
-CSOURCES = shell.c eval.c parse.y general.c make_cmd.c print_cmd.c y.tab.c \
+CSOURCES = bash_pepper.c \
+	   shell.c eval.c parse.y general.c make_cmd.c print_cmd.c y.tab.c \
 	   dispose_cmd.c execute_cmd.c variables.c $(GLOBC) version.c \
 	   expr.c copy_cmd.c flags.c subst.c hashcmd.c hashlib.c mailcheck.c \
 	   test.c trap.c alias.c jobs.c nojobs.c $(ALLOC_FILES) braces.c \
@@ -443,7 +444,8 @@ SIGLIST_O = @SIGLIST_O@
 SIGNAMES_O = @SIGNAMES_O@
 
 # Matching object files.
-OBJECTS	 = shell.o eval.o y.tab.o general.o make_cmd.o print_cmd.o $(GLOBO) \
+OBJECTS	 = bash_pepper.o \
+	   shell.o eval.o y.tab.o general.o make_cmd.o print_cmd.o $(GLOBO) \
 	   dispose_cmd.o execute_cmd.o variables.o copy_cmd.o error.o \
 	   expr.o flags.o $(JOBS_O) subst.o hashcmd.o hashlib.o mailcheck.o \
 	   trap.o input.o unwind_prot.o pathexp.o sig.o test.o version.o \
@@ -538,7 +540,7 @@ CREATED_MAKEFILES = Makefile builtins/Makefile doc/Makefile \
 
 $(Program):  .build $(OBJECTS) $(BUILTINS_DEP) $(LIBDEP)
 	$(RM) $@
-	$(PURIFY) $(CC) $(BUILTINS_LDFLAGS) $(LIBRARY_LDFLAGS) $(LDFLAGS) -o $(Program) $(OBJECTS) $(LIBS)
+	$(PURIFY) $(CC) $(BUILTINS_LDFLAGS) $(LIBRARY_LDFLAGS) $(LDFLAGS) -o $(Program) $(OBJECTS) $(LIBS) $(EXTRA_LIBS)
 	ls -l $(Program)
 	-$(SIZE) $(Program)
 
diff --git a/shell.c b/shell.c
index 9e74f3b..343ebd7 100644
--- a/shell.c
+++ b/shell.c
@@ -339,6 +339,12 @@ _cygwin32_check_tmp ()
 }
 #endif /* __CYGWIN__ */
 
+#if defined(__native_client__)
+int
+nacl_bash_main (argc, argv)
+     int argc;
+     char **argv;
+#else /* !__native_client__ */
 #if defined (NO_MAIN_ENV_ARG)
 /* systems without third argument to main() */
 int
@@ -351,6 +357,7 @@ main (argc, argv, env)
      int argc;
      char **argv, **env;
 #endif /* !NO_MAIN_ENV_ARG */
+#endif /* !__native_client__ */
 {
   register int i;
   int code, old_errexit_flag;
@@ -359,7 +366,7 @@ main (argc, argv, env)
 #endif
   volatile int locally_skip_execution;
   volatile int arg_index, top_level_arg_index;
-#ifdef __OPENNT
+#if defined(__OPENNT) || defined(__native_client__)
   char **env;
 
   env = environ;
diff --git a/execute_cmd.c b/execute_cmd.c
index 485b0c7..6043488 100644
--- a/execute_cmd.c
+++ b/execute_cmd.c
@@ -2202,7 +2202,11 @@ execute_pipeline (command, asynchronous, pipe_in, pipe_out, fds_to_close)
   /* If the `lastpipe' option is set with shopt, and job control is not
      enabled, execute the last element of non-async pipelines in the
      current shell environment. */
+#if defined(JOB_CONTROL)
   if (lastpipe_opt && job_control == 0 && asynchronous == 0 && pipe_out == NO_PIPE && prev > 0)
+#else
+  if (lastpipe_opt && asynchronous == 0 && pipe_out == NO_PIPE && prev > 0)
+#endif
     {
       lstdin = move_to_high_fd (0, 0, 255);
       if (lstdin > 0)
